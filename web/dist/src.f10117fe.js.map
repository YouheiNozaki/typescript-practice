{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,ADOA,ICPA,ADOA,IAAA,ECPA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA;ACLA,ADKA,ICLM,IAAI,GAAG,CDKb,GCLiB,MAAA,CAAA,IAAJ,CAAS;AAAE,ADQtB,ECRsB,IAAI,EAAE,GDQ5B,IAAA,CAAoB,CCRA,GDQpB,EAAmC;ACRI,ADQnB,ECRmB,GAAG,EAAE,EDQxB,IAAA,GAAA,IAAA;ACRA,ADMpB,CCNW,CAAb,ODME,MAAA,GAAwC,EAAxC;ACJF,ADMyC,ICNrC,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,EAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD,ADMC,CCRF,CDQE,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACLtB,ADMI,ICNA,CAAC,EAAL,CAAQ,GDMG,KCNX,ADMgB,ECNE,EDMP,CAAU,QAAV,CCNO,ADMd;ACLF,ADMC,ECND,CDIA,MCJO,CAAC,GAAR,CAAY,WAAZ;AACD,CAFD;AAGA,ADME,EAAA,ECNE,CAAC,CDMH,CCNF,ADME,CCNM,MAAR,EAAgB,ADMd,CAAA,GAAA,GAAA,KCNc,KDMV,MAAJ,EAAqB;ACLrB,ADME,ECNF,EDME,KCNK,CAAC,ADMA,CAAC,ECNT,CAAY,GDMV,CAAc,KAAK,IAAnB,EAAyB,KCN3B,CDME;ACLH,ADME,CCRH,EDME;ACFF,IAAI,CAAC,OAAL,CAAa,MAAb;ADME,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACtC;AACD;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,QAAA,EAAQ;AACvB,MAAA,QAAQ;AACT,KAFD;AAGD,GAVD;;AAWF,SAAA,IAAA;AA9BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\ntype Callback = () => void;\n\nexport class User {\n  events: { [key: string]: Callback[] } = {};\n\n  constructor(private data: UserProps) {}\n\n  get(propName: string): number | string {\n    return this.data[propName];\n  }\n\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  on(eventName: string, callback: Callback): void {\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n\n    if (!handlers || handlers.length === 0) {\n      return;\n    }\n\n    handlers.forEach(callback => {\n      callback();\n    });\n  }\n}\n","import { User } from './models/User';\n\nconst user = new User({ name: 'newname', age: 20 });\n\nuser.on('change', () => {\n  console.log('Change #1');\n});\nuser.on('change', () => {\n  console.log('Change #2');\n});\nuser.on('save', () => {\n  console.log('Save was triggered');\n});\n\nuser.trigger('save');\n"]}